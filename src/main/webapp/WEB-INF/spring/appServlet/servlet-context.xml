<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- <resources mapping="/resources/thum/**" location="file:///C:/project/gitspace/thum/"></resources> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
        <beans:property name="order" value="2"/>
	</beans:bean>
	
<!-- =================================================================================================================================== -->	
	<!-- RequestMappingHandlerAdapter, RequestMappingHandlerMapping bean 정의 : jsonview 사용 준비 -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
    <beans:bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    	<beans:property name="alwaysUseFullPath" value="true"></beans:property>
	</beans:bean>
	
	<!-- ajax를 처리할 resolver의 load 순서를 0으로 하여 먼저 인식하도록 함  -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8"></beans:property>
	</beans:bean>

	<!-- order 프로퍼티를 수정하여 인식 순서를 변경 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"></beans:property>
	</beans:bean>
<!-- =================================================================================================================================== -->

	<context:component-scan base-package="com.edu.main" />
	<context:component-scan base-package="com.edu.member" />
	<context:component-scan base-package="com.edu.board"/>
	<context:component-scan base-package="com.edu.shopping" />
	<context:component-scan base-package="com.edu.store" />
	<context:component-scan base-package="com.edu.sole" />
	<context:component-scan base-package="com.edu.common"/>
	
	<context:annotation-config/>
	<!-- 파일 업로드 관련 설정을 한다. : 파일 업로드에 대한 규칙(multiparResolver)을 적용한다. -->
	<!-- springframework에 내장된 CommonsMultipartResolver를 등록한다. -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 업로드될 파일의 최대 용량(byte) -->
		<beans:property name="maxUploadSize"    value="10240000"/>
		<!-- 디스크에 임시 파일을 생성하기 전 메모리에 보관할 수 있는 최대 바이트 크기를 설정 -->
		<beans:property name="maxInMemorySize"    value="10240000"/>
		<!-- 전달되는 매개변수의 인코딩을 설정 -->
		<beans:property name="defaultEncoding"    value="UTF-8"/>
	</beans:bean>
	
	<!-- 파일 업로드를 위한 디렉토리 설정  -->
	<!-- String uploadPath = new Strung("c:/board/upload"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="${path}/resources/images/thumb"/>
	</beans:bean>
	
</beans:beans>
