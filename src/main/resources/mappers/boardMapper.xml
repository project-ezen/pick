<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.board.mappers.boardMapper">
	
	<resultMap type="boardDTO" id="articlesResult">
		<result column="recNum" 		property="recNum"/>
		<result column="board_id" 		property="board_id"/>
		<result column="title" 			property="title"/>
		<result column="content" 		property="content"/>
		<result column="writeDate" 		property="writeDate"/>
		<result column="image" 			property="image"/>
		<result column="m_id" 			property="writer"/>
		<result column="m_nickname" 	property="nickname"/>
		<result column="thumbnail" 		property="thumbnail"/>
		<result column="reply_count" 	property="reply_count"/>
		<!-- <collection property="memberDTO" resultMap="MemberDTO" /> -->
	</resultMap>

	<!-- 게시물 목록 
	<select id="selectAllArticleList" resultType="boardDTO">
		<![CDATA[
			SELECT	*
			FROM	board
			order by board_id desc
		]]>
	</select> -->
	
	<!-- 전체 게시글 수 구하기 (Paging 처리) -->
	<select id="boardListTotalCount" parameterType="com.edu.board.dto.PagingCriteria" resultType="Integer">
		<![CDATA[
		 	SELECT	COUNT(*)
		 	FROM	board
		]]>
	</select>
	
	<!-- 게시글 목록 가져오기 (Paging) -->
	<!-- ROWNUM 을 가장 안 쪽에 사용하면 Mapper에서 인식을 못하기 때문에 바깥쪽에 사용하였다. -->
	<!-- rownum, level 이름으로 인해서 resultMap articlesResult 로 사용한다. -->
	<select id="boardListPaging" parameterType="com.edu.board.dto.PagingCriteria" resultType="boardDTO" resultMap="articlesResult">
	<![CDATA[
	select *
	from (
	    select recNum, board_id, title, content, writedate, m_id, m_nickname, thumbnail ,reply_count
	    from (
	        select rownum as recNum, board_id, title, content, writedate, m_id, m_nickname, thumbnail ,reply_count
	        from (
	            select b.board_id, b.title, b.content, b.writedate, m.m_id, m.m_nickname, b.thumbnail, 
	            	(select count(*) from reply where b_id= b.board_id) AS reply_count
	            from board b, member m
	            where b.m_id = m.m_id
	            order by board_id desc)))
	WHERE recNum BETWEEN (#{page} - 1) * #{perPageNum} + 1 AND #{page} * #{perPageNum}
	]]>
	</select>
	
	<!-- 게시글 번호에 해당하는 상세정보 -->
	<select id="selectArticle" parameterType="int" resultType="boardDTO" resultMap="articlesResult">
		<![CDATA[
			select *
			from (
			    select  b.board_id, b.title, b.content, b.writedate, b.image, m.m_id, m.m_nickname
			    from board b, member m
			    where b.m_id = m.m_id)
			where board_id = #{board_id}
		]]>
	</select>
	
	
	
	<!-- 새로운 게시글에 사용할 번호 추출하기 : 게시글 테이블에서 -->
	<select id="selectNewArticleNO" resultType="int">
		<![CDATA[
			SELECT	NVL(MAX(board_id), 0) + 1
			FROM	board
		]]>
	</select>
	
	<!-- 게시글 작성(post) -->
	<insert id="create" parameterType="java.util.Map">
		<![CDATA[
			insert into board (board_id, title, content, image, m_id, thumbnail)
			values (#{board_id}, #{title}, #{content}, #{image, jdbcType=VARCHAR}, #{writer}, #{thumbnail})
		]]>
	</insert>
	
	<!-- 게시글 삭제 -->
	<delete id="delete">
		<![CDATA[
			DELETE from board
			where board_id = #{board_id}
		]]>
	</delete>
	
	<!-- 찜 등록 -->
	<insert id="jjimOK">
		<![CDATA[
			insert into jjim (jjim_id, b_id, mem_id)
			values (#{jjim_id}, #{b_id}, #{mem_id})
		]]>
	</insert>
	
	<!-- 찜 조회 -->
	<select id="jjimSelect" parameterType="com.edu.board.dto.JjimDTO" resultType="com.edu.board.dto.JjimDTO">
		<![CDATA[
			select jjim_id, j_check
			from jjim
			where b_id = #{b_id}
		]]>
	</select>
	
	<!-- 찜 id 추출 -->
	<select id="selectjjimNO" resultType="int">
		<![CDATA[
			SELECT	NVL(MAX(jjim_id), 0) + 1
			FROM	jjim
		]]>
	</select>
	
	<!-- 댓글 수 
	<update id="rCount" parameterType="int">
		<![CDATA[
			update board 
				set reply_count = (select count(*) from reply where b_id = #{board_id})
			where board_id = #{board_id}
		]]>
	</update>
	 -->
	
	
</mapper>


